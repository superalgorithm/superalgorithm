import pytest

from runmachine.data.ohlcv_aggregator import OHLCVAggregator
from runmachine.types import OHLCV

# binance static test data
hourly = [
    (1721008800000, 61389.99, 62610.0, 61300.87, 62482.0, 3372.85532),
    (1721012400000, 62482.0, 62796.01, 62322.0, 62647.87, 1442.33991),
    (1721016000000, 62647.87, 62832.77, 62433.01, 62610.0, 1234.8639),
    (1721019600000, 62610.0, 62968.15, 62534.0, 62799.99, 1119.63548),
    (1721023200000, 62800.0, 62999.0, 62706.01, 62870.02, 1075.81654),
    (1721026800000, 62870.02, 63084.0, 62746.0, 62840.12, 1412.86329),
    (1721030400000, 62840.12, 63243.71, 62778.81, 62879.54, 1317.62151),
    (1721034000000, 62879.53, 62900.0, 62542.02, 62637.64, 1221.24083),
    (1721037600000, 62637.63, 62810.0, 62413.5, 62535.96, 828.07073),
    (1721041200000, 62535.95, 62603.53, 62290.0, 62454.0, 858.23855),
    (1721044800000, 62454.0, 62809.99, 62444.67, 62616.0, 976.56222),
    (1721048400000, 62616.01, 62981.0, 62482.59, 62908.01, 1654.66589),
    (1721052000000, 62908.01, 63236.28, 62731.48, 63218.06, 1666.73384),
    (1721055600000, 63218.06, 63328.0, 62864.32, 63026.0, 2268.0699),
    (1721059200000, 63026.01, 63606.96, 62852.0, 63411.77, 2473.08305),
    (1721062800000, 63411.77, 63730.0, 63079.65, 63081.97, 2106.78746),
    (1721066400000, 63081.97, 63614.83, 62993.33, 63499.0, 1536.35808),
    (1721070000000, 63498.99, 63820.15, 63200.19, 63342.0, 2533.20337),
    (1721073600000, 63342.0, 63777.0, 63251.65, 63731.36, 1023.74966),
    (1721077200000, 63731.36, 63780.0, 63495.71, 63532.44, 788.6113),
    (1721080800000, 63532.44, 64782.12, 63508.0, 64343.6, 2882.0835),
    (1721084400000, 64343.6, 64900.0, 64225.19, 64724.14, 1410.32482),
    (1721088000000, 64724.06, 64955.49, 64436.2, 64611.44, 1835.35302),
    (1721091600000, 64611.44, 64860.0, 64467.23, 64848.08, 932.36523),
    (1721095200000, 64848.07, 64848.08, 64541.35, 64819.91, 883.67648),
    (1721098800000, 64819.67, 64863.98, 64599.59, 64752.14, 807.74601),
    (1721102400000, 64752.14, 64993.95, 64473.68, 64487.01, 1148.75348),
    (1721106000000, 64487.01, 64550.0, 63464.9, 63654.92, 3311.7972),
    (1721109600000, 63654.92, 63880.61, 62794.0, 62899.64, 2579.1421),
    (1721113200000, 62899.64, 63333.19, 62721.79, 62895.01, 2873.61596),
    (1721116800000, 62895.01, 63091.39, 62373.24, 62820.67, 2185.57004),
    (1721120400000, 62820.67, 63259.12, 62686.25, 63187.54, 1494.98117),
    (1721124000000, 63187.53, 63660.0, 63088.83, 63443.54, 1171.44908),
    (1721127600000, 63443.55, 63872.2, 63146.45, 63746.11, 1428.01869),
    (1721131200000, 63746.11, 64265.33, 63601.02, 63743.31, 1785.10099),
    (1721134800000, 63743.3, 64100.0, 63400.01, 63419.99, 1760.41084),
    (1721138400000, 63419.99, 63898.71, 63063.83, 63836.09, 1780.20422),
    (1721142000000, 63836.09, 64960.86, 63799.0, 64878.24, 3605.09775),
    (1721145600000, 64878.24, 65200.0, 64207.96, 64500.0, 3372.18128),
    (1721149200000, 64500.0, 64642.79, 64111.56, 64547.52, 1173.38419),
    (1721152800000, 64547.52, 64922.32, 64405.1, 64795.44, 1240.51718),
    (1721156400000, 64795.43, 65178.83, 64597.13, 65165.43, 2145.16352),
    (1721160000000, 65165.42, 65182.99, 64612.16, 64651.82, 1102.92271),
    (1721163600000, 64651.82, 64831.33, 64479.14, 64500.01, 752.97687),
    (1721167200000, 64500.0, 64623.21, 64115.0, 64616.92, 1095.61568),
    (1721170800000, 64616.92, 65388.97, 64616.91, 65043.99, 2064.48546),
    (1721174400000, 65044.0, 65603.12, 64932.31, 65505.41, 1682.12259),
    # (1721178000000, 65505.41, 66128.63, 65440.3, 65670.19, 2126.40166),
    # (1721181600000, 65670.18, 65895.0, 65541.05, 65612.86, 1094.76663),
    # (1721185200000, 65612.85, 65792.87, 65375.33, 65701.66, 974.48649),
    # (1721188800000, 65701.66, 65855.94, 65546.32, 65830.0, 853.1448),
    # (1721192400000, 65830.0, 65993.14, 65600.0, 65624.01, 932.95522),
    # (1721196000000, 65624.0, 65790.0, 65454.17, 65575.87, 1094.28692),
    # (1721199600000, 65575.87, 65575.87, 65198.62, 65258.0, 1506.6382),
    # (1721203200000, 65258.01, 65477.54, 64807.49, 65179.63, 1707.68187),
    # (1721206800000, 65179.62, 65500.0, 65078.0, 65331.98, 821.75646),
    # (1721210400000, 65331.99, 65355.9, 65100.0, 65120.02, 501.31591),
    # (1721214000000, 65120.02, 65144.76, 64560.0, 64698.95, 1563.99195),
]


def test_aggregate_daily():
    aggregator = OHLCVAggregator(source_id="BTC/USD", timeframe="1d")
    for timestamp, o, h, l, c, v in hourly:
        aggregator.update(OHLCV(timestamp, o, h, l, c, v)).current_bar

    last_conmpleted_bar = aggregator[-1]

    assert last_conmpleted_bar.open == 64724.06
    assert last_conmpleted_bar.high == 65388.97
    assert last_conmpleted_bar.low == 62373.24
    assert last_conmpleted_bar.close == 65043.99
    assert last_conmpleted_bar.volume == 42530.52915
